
@using HMS.Models
@using Microsoft.AspNet.Identity
@model HMS.Areas.DashBoard.ViewModels.UsersListingViewModel


@if (Model != null && Model.Users != null && Model.Users.Count() > 0)
{
    <b class="">@Model.totalRecord result(s) found</b>
    <table class="table table-striped table-responsive-xl table-bordered table-sm">
        <thead>
        <tr>

            <th scope="col">Name</th>
            <th scope="col">Email</th>
            <th scope="col">Role(s)</th>
            <th scope="col">Actions</th>
        </tr>
        </thead>
        <tbody>

        @foreach (var t in Model.Users)
        {
            <tr>
               
                <td>
                    @t.UserName
                </td>
                <td>
                    @t.Email
                </td>
                <td>
                     @*@if (Model.Roles != null)
                     {
                        
                         foreach (var r in Model.Roles)
                         {
                             foreach (var u in @t.Roles)
                         {
                                 if (@r.Id == u.RoleId)
                                  {
                                      @r.Name
                                  }
                            
                         }
                     }
                     
                     }*@
                    
                        @{Html.RenderAction("GetSingleUserRoles", new { @id = @t.Id }); }
                    

                   
                </td>
              
                <td>
                    <button type="button" data-href="@Url.Action("Action", "User", new {Id = @t.Id})" class="data-btn btn btn-primary btn-sm" data-toggle="modal" data-target="#actionModal">
                        <i class="fas fa-pen mr-1"></i>Edit
                    </button>
                    <button type="button" data-href="@Url.Action("Action", "User", new {Id = @t.Id, isDelete = true})" class="data-btn btn btn-danger btn-sm" data-toggle="modal" data-target="#actionModal">
                        <i class="fas fa-trash-alt mr-1"></i>Delete
                    </button>
                    <button type="button" data-href="@Url.Action("GetUserRoles", "User", new {id = @t.Id})" class="data-btn btn btn-primary btn-sm" data-toggle="modal" data-target="#actionModal">
                        <i class="fas fa-user-shield mr-1"></i>Role
                    </button>
                    <button type="button" data-href="@Url.Action("ChangePassword", "User", new {@userId = @t.Id})" class="data-btn btn btn-info btn-sm" data-toggle="modal" data-target="#actionModal">
                        <i class="fas fa-lock mr-1"></i>
                    </button>

                </td>
            </tr>
        }

        </tbody>
    </table>


    <!-- pager -->

    if (Model.pager.EndPage > 1)
    {
        <div class="">
            <nav class="" aria-label="page ">
                <ul class="pagination justify-content-center">
                    @if (Model.pager.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", "User", new {@searchTerm = @Model.SearchTerm,
                                                      @roleID = @Model.RoleID})">First</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", "User", new { @searchTerm = @Model.SearchTerm,
                                                      @roleID = @Model.RoleID, @page = (Model.pager.CurrentPage - 1) })">Previous</a>
                        </li>
                    }

                    @for (var page = Model.pager.StartPage; page <= Model.pager.EndPage; page++)
                    {
                        <li class="page-item @(page == Model.pager.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", "User", new {@searchTerm = @Model.SearchTerm,
                                                      @roleID = @Model.RoleID , @page = page})">@page</a>
                        </li>
                    }

                    @if (Model.pager.CurrentPage < Model.pager.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", "User", new {@searchTerm = @Model.SearchTerm,
                                                      @roleID = @Model.RoleID, @page = (Model.pager.CurrentPage + 1)})">Next</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", "User", new {@searchTerm = @Model.SearchTerm,
                                                     @roleID = @Model.RoleID, @page = (Model.pager.TotalPages)})">Last</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }


}
else
{
        <div class="alert alert-warning" role="alert">
            Sorry! no Record exist!
        </div>
        }
